/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing
**
** This file is part of the Qt Build Suite.
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms and
** conditions see http://www.qt.io/terms-conditions. For further information
** use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 or version 3 as published by the Free
** Software Foundation and appearing in the file LICENSE.LGPLv21 and
** LICENSE.LGPLv3 included in the packaging of this file.  Please review the
** following information to ensure the GNU Lesser General Public License
** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, The Qt Company gives you certain additional
** rights.  These rights are described in The Qt Company LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
****************************************************************************/

/*!
    \contentspage index.html
    \page jsextension-file.html
    \ingroup list-of-builtin-services

    \title File Service
    \brief Provides operations on the file system.

    The \c File service offers limited access to the file system for operations such as copying
    or removing files.

    \section1 Available Operations

    \section2 copy
    \code
    File.copy(sourceFilePath: string, targetFilePath: string): boolean
    \endcode
    Copies \c sourceFilePath to \c targetFilePath. Any directory components in \c targetFilePath
    that do not yet exist will be created. If \c sourceFilePath is a directory, a recursive
    copy will be made. If an error occurs, a JavaScript exception will be thrown.
    \note \c targetFilePath must be the counterpart of \c sourceFilePath at the new location,
    \b{not} the new parent directory. This allows the copy to have a different name and is true
    even if \c sourceFilePath is a directory.

    \section2 exists
    \code
    File.exists(filePath: string): boolean
    \endcode
    Returns true if and only if there is a file at \c filePath.

    \section2 lastModified
    \code
    File.lastModified(filePath: string): number
    \endcode
    Returns the time of last modification for the file at \c filePath. The concrete semantics of the
    returned value are platform-specific. You should only rely on the property that a smaller value
    indicates an older timestamp.

    \section2 makePath
    \code
    File.makePath(path: string): boolean
    \endcode
    Makes the directory at \c path, creating intermediate directories if necessary.
    Conceptually equivalent to \c{mkdir -p}

    \section2 remove
    \code
    File.remove(filePath: string): boolean
    \endcode
    Removes the file at \c filePath. In case of a directory, it will be removed recursively.
*/
